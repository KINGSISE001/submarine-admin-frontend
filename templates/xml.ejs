<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htnova.<%= module %>.mapper.<%= Entity %>Mapper">
<%
    function genSqlFields(fields) {
        let result = "";
        fields.forEach(field => {
            result += `\n\t\ta.${StrUtil.camelToUnderscore(field.field)} as ${field.field},`
        })
        result = result.slice(0, -1)
        return result;
    }

    function genSqlSearch(fields) {
        let result = "";
        fields.forEach(field => {
            if(field.field !== 'delFlag') {
                let initialUpperField = StrUtil.initialUpperCase(field.field)
                let underscoreField = StrUtil.camelToUnderscore(field.field)
                if(/(varchar|char|text)/.test(field.type)) {
                  result += `\n\t\t<if test="${ entity }Dto.${ field.field } != null and ${ entity }Dto.${ field.field } != ''">`
                } else {
                  result += `\n\t\t<if test="${ entity }Dto.${ field.field } != null">`
                }
                if(field.sqlType === 'BETWEEN') {
                    result += `\n\t\t\tAND a.${ underscoreField } = #{${ entity }Dto.${ field.field }}`
                    result += `\n\t\t</if>`
                    result += `\n\t\t<if test="${ entity }Dto.begin${ initialUpperField } != null and ${ entity }Dto.end${ initialUpperField } != null">`
                    result += `\n\t\t\tAND a.${ underscoreField } BETWEEN #{${ entity }Dto.begin${ initialUpperField }} AND #{${ entity }Dto.end${ initialUpperField }}`
                } else if(field.sqlType === 'LIKE') {
                    result += `\n\t\t\tAND a.${ underscoreField } ${field.sqlType} concat('%', #{${ entity }Dto.${ field.field }}, '%')`
                } else {
                    result += `\n\t\t\tAND a.${ underscoreField } ${field.sqlType} #{${ entity }Dto.${ field.field }}`
                }
                result += "\n\t\t</if>"
            }
        })
        return result;
    }
-%>
    <sql id="SelectColumns"><%- genSqlFields(fields) %>
    </sql>

    <!--列表查询-->
    <sql id="findList">
        SELECT
            <include refid="SelectColumns"/>
        FROM <%= StrUtil.camelToUnderscore(tableName) %> a WHERE a.del_flag = #{<%= entity %>Dto.delFlag}
            <%- genSqlSearch(fields) %>
    </sql>

    <!--分页查询-->
    <select id="findPage" resultType="<%= Entity %>">
        <include refid="findList"/>
    </select>

    <!--列表查询-->
    <select id="findList" resultType="<%= Entity %>">
        <include refid="findList"/>
    </select>

</mapper>
